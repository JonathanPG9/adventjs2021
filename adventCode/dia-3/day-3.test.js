import isValid from './day-3'

/* El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando hechas un l√≠o. üò±
Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().
Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis cierran correctamente y que, adem√°s, no vayan vac√≠os.
¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de los par√©ntesis que hacen que no sean v√°lidas.
Por suerte s√≥lo los ha dejado en medio de los par√©ntesis... */

describe('isValid', () => {
  let letter;
  beforeEach(() => {
    letter = "bici coche (bal√≥n) bici coche peluche"
  });
  describe('truthy cases', () => {
    test('should return true', () => {
      const result = isValid(letter);
      expect(result).toBeTruthy()
    });
    test('should return true', () => {
      letter = "(mu√±eca) consola bici"
      const result = isValid(letter);
      expect(result).toBeTruthy()
    });
    test('should return true', () => {
      letter = "(perro) moto auto"
      const result = isValid(letter);
      expect(result).toBeTruthy()
    });
  });
  describe('falsy cases', () => {
    test('should return false', () => {
      letter = ""
      const result = isValid(letter);
      expect(result).toBeFalsy()
    });
    test('should return false', () => {
      letter = "(peluche {) bici"
      const result = isValid(letter);
      expect(result).toBeFalsy()
    });
    test('should return false', () => {
      letter = "() bici"
      const result = isValid(letter);
      expect(result).toBeFalsy()
    });
    test('should return false', () => {
      letter = "peluche (bici [coche) bici coche bal√≥n"
      const result = isValid(letter);
      expect(result).toBeFalsy()
    });
  })
});
